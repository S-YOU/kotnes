import ext.drawDot
import util.pairs
import java.awt.Color
import java.awt.Graphics
import java.awt.image.BufferedImage
import java.io.File
import javax.imageio.ImageIO

class Renderer {
    fun render(data: Ppu.RenderingData) {
        val img = BufferedImage(256, 224, BufferedImage.TYPE_3BYTE_BGR)
        data.background.forEachIndexed { idx, tile ->
            val x = (idx % 32) * 8
            val y = (idx / 32) * 8
            renderTile(img.graphics, tile, x, y, data.palette)
        }
        ImageIO.write(img, "png", File("rendered.png"))
    }

    private fun renderTile(g: Graphics, tile: Ppu.Tile, tileX: Int, tileY: Int, palette: IntArray) {
        pairs((0 until 8), (0 until 8)).forEach {
            val (i, j) = it
            val paletteIdx = tile.paletteId * 4 + tile.sprite[i][j]
            val colorId = palette[paletteIdx]
            val color = COLORS[colorId]
            val x = tileX + j
            val y = tileY + i
            g.color = Color(color[0], color[1], color[2])
            g.drawDot(x, y)
        }
    }

    companion object {
        private val COLORS = arrayOf(
                arrayOf(0x80, 0x80, 0x80), arrayOf(0x00, 0x3D, 0xA6), arrayOf(0x00, 0x12, 0xB0), arrayOf(0x44, 0x00, 0x96),
                arrayOf(0xA1, 0x00, 0x5E), arrayOf(0xC7, 0x00, 0x28), arrayOf(0xBA, 0x06, 0x00), arrayOf(0x8C, 0x17, 0x00),
                arrayOf(0x5C, 0x2F, 0x00), arrayOf(0x10, 0x45, 0x00), arrayOf(0x05, 0x4A, 0x00), arrayOf(0x00, 0x47, 0x2E),
                arrayOf(0x00, 0x41, 0x66), arrayOf(0x00, 0x00, 0x00), arrayOf(0x05, 0x05, 0x05), arrayOf(0x05, 0x05, 0x05),
                arrayOf(0xC7, 0xC7, 0xC7), arrayOf(0x00, 0x77, 0xFF), arrayOf(0x21, 0x55, 0xFF), arrayOf(0x82, 0x37, 0xFA),
                arrayOf(0xEB, 0x2F, 0xB5), arrayOf(0xFF, 0x29, 0x50), arrayOf(0xFF, 0x22, 0x00), arrayOf(0xD6, 0x32, 0x00),
                arrayOf(0xC4, 0x62, 0x00), arrayOf(0x35, 0x80, 0x00), arrayOf(0x05, 0x8F, 0x00), arrayOf(0x00, 0x8A, 0x55),
                arrayOf(0x00, 0x99, 0xCC), arrayOf(0x21, 0x21, 0x21), arrayOf(0x09, 0x09, 0x09), arrayOf(0x09, 0x09, 0x09),
                arrayOf(0xFF, 0xFF, 0xFF), arrayOf(0x0F, 0xD7, 0xFF), arrayOf(0x69, 0xA2, 0xFF), arrayOf(0xD4, 0x80, 0xFF),
                arrayOf(0xFF, 0x45, 0xF3), arrayOf(0xFF, 0x61, 0x8B), arrayOf(0xFF, 0x88, 0x33), arrayOf(0xFF, 0x9C, 0x12),
                arrayOf(0xFA, 0xBC, 0x20), arrayOf(0x9F, 0xE3, 0x0E), arrayOf(0x2B, 0xF0, 0x35), arrayOf(0x0C, 0xF0, 0xA4),
                arrayOf(0x05, 0xFB, 0xFF), arrayOf(0x5E, 0x5E, 0x5E), arrayOf(0x0D, 0x0D, 0x0D), arrayOf(0x0D, 0x0D, 0x0D),
                arrayOf(0xFF, 0xFF, 0xFF), arrayOf(0xA6, 0xFC, 0xFF), arrayOf(0xB3, 0xEC, 0xFF), arrayOf(0xDA, 0xAB, 0xEB),
                arrayOf(0xFF, 0xA8, 0xF9), arrayOf(0xFF, 0xAB, 0xB3), arrayOf(0xFF, 0xD2, 0xB0), arrayOf(0xFF, 0xEF, 0xA6),
                arrayOf(0xFF, 0xF7, 0x9C), arrayOf(0xD7, 0xE8, 0x95), arrayOf(0xA6, 0xED, 0xAF), arrayOf(0xA2, 0xF2, 0xDA),
                arrayOf(0x99, 0xFF, 0xFC), arrayOf(0xDD, 0xDD, 0xDD), arrayOf(0x11, 0x11, 0x11), arrayOf(0x11, 0x11, 0x11)
        )
    }
}